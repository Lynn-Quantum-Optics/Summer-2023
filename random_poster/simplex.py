import numpy as np

def stick_breaking_simplex(n):
    ''' n-dimensional simplex generated by stick breaking. '''
    x = np.random.rand(n-1)
    x = np.sort(x)
    x = np.append(x,1)
    x = np.append(0,x)
    return np.diff(x)

def basic_simplex(n):
    ''' random simplex using basic method.
    
    like roik, except the last element is just 1-sum(others) instead of normalizing.
    '''
    x = []
    for _ in range(n-1):
        x.append(np.random.rand()*(1-sum(x)))
    x.append(1-sum(x))
    return np.array(x)

def roik_simplex(n):
    ''' random simplex using roik method. '''
    x = []
    for _ in range(n):
        x.append(np.random.rand()*(1-sum(x)))
    return np.array(x)/np.sum(x)

def gaussian_simplex(n):
    ''' gaussian simplex method '''
    x = np.abs(np.random.randn(n))
    return x / np.sum(x)

def exponential_simplex(n):
    ''' simplex from an exponential distribution. '''
    x = np.random.exponential(size=n)
    return x / np.sum(x)

SIMPLEX_METHODS = dict(
    stick=stick_breaking_simplex, 
    basic=basic_simplex,
    roik=roik_simplex,
    gauss=gaussian_simplex,
    exp=exponential_simplex
)
